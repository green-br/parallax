name: Release

on:
  push:
    tags:
      - 'v*.*.*'


jobs:
  build:
    runs-on: ubuntu-latest
      permissions:
        contents: write
        actions: write
        attestations: write
        security-events: write

    container:
      image: opensuse/leap:15.5
      env:
        PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:${{ env.PATH }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_REPOSITORY: ${{ github.repository }}
        GITHUB_REF: ${{ github.ref }}
        GITHUB_EVENT_PATH: ${{ github.event_path }}

    steps:
      - name: Install system dependencies
        run: |
          zypper --non-interactive refresh
          zypper --non-interactive update -y
          zypper --non-interactive install -y \
            wget \
            tar \
            gzip \
            git \
            btrfsprogs \
            device-mapper-devel \
            libbtrfs-devel \
            squashfs \
            fuse-overlayfs \
            squashfuse \
            inotify-tools

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.0'

      - name: Cache Go build & modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
            ${{ env.GOPATH }}/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: check sh
        run: echo $PATH

      - name: Install go deps
        run: go get .

      - name: Build Linux binaries
        env:
          CGO_ENABLED: '0'
          GOOS: linux
          GOFLAGS: "-buildvcs=false"
        run: |
          mkdir -p dist
          for arch in amd64 arm64; do
            go build \
              -ldflags "-X 'github.com/sarus-suite/parallax/version.Version=${{ github.ref_name }}'" \
              -o dist/parallax-${{ github.ref_name }}-linux-$arch \
              .
          done

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload amd64 binary
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: dist/parallax-${{ github.ref_name }}-linux-amd64
          asset_name: parallax-${{ github.ref_name }}-linux-amd64
          asset_content_type: application/octet-stream

      - name: Upload arm64 binary
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.release.outputs.upload_url }}
          asset_path: dist/parallax-${{ github.ref_name }}-linux-arm64
          asset_name: parallax-${{ github.ref_name }}-linux-arm64
          asset_content_type: application/octet-stream

